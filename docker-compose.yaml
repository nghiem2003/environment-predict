version: '3.8'

services:
  postgres_db:
    image: postgres:17
    container_name: postgres_db
    user: postgres
    restart: always
    networks:
      - proxy_network
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=ocean
    volumes:
      - postgres_db:/var/lib/postgresql/data
      - ./backup.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d ocean']
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - '5432:5432'

  express_backend:
    build: ./backend-express
    container_name: express_backend
    networks:
      - proxy_network
    restart: always
    depends_on:
      postgres_db:
        condition: service_healthy

  flask_backend:
    build: ./backend-flask
    container_name: flask_backend
    networks:
      - proxy_network
    restart: always
    ports:
      - '5001:5001'
  frontend:
    build: ./frontend
    container_name: frontend
    networks:
      - proxy_network
    ports:
      - '8082:80'
    restart: always
    depends_on:
      - express_backend

networks:
  proxy_network:
    driver: bridge

volumes:
  postgres_db:
